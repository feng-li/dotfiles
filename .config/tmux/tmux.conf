## Prefix

## Secondary prefix (was C-b, conflict with Emacs)
set -g prefix2 Escape
bind Escape send-prefix -2
set -s escape-time 10 # faster command sequences

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set default shell
# set-option -g default-shell zsh

## Set $TERM to have italic fonts
set -g default-terminal "xterm-256color"
# set -g default-terminal "screen-256color"
setw -g xterm-keys on
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# set-option -g default-terminal xterm-256color
# set -g default-terminal "alacritty"

## always new window/tab on current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# boost history
set -g history-limit 5000

#
set -g mode-key emacs
# bind b list-buffers  # list paste buffers
bind p choose-buffer # choose which buffer to paste from

# mouse to sroll within pure tmux or emacs/vim inside tmux
set -g mouse on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
bind-key -T prefix m set -g mouse\; display 'Mouse: #{?mouse,ON,OFF}'

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

# Index start from one
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Alt-Arrow key to switch window
bind -n M-Left  previous-window
bind -n M-Right next-window
bind -n M-Up  previous-window
bind -n M-Down next-window

# Shift-Alt-Arrow key to switch pane
bind -n S-M-Left select-pane -L
bind -n S-M-Right select-pane -R
bind -n S-M-Up select-pane -U
bind -n S-M-Down select-pane -D

# Split pane
bind h split-window -h
bind v split-window -v

# Kill pane and window
bind-key x kill-pane
bind-key k kill-window

## Tmux use zsh
set-option -g default-shell $SHELL

# Reload tmux config
bind r source-file $HOME/.local/tmux/tmux.conf \; display '$HOME/.local/tmux/tmux.conf sourced'

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings Â· Issue #237 Â· tmux/tmux - https://github.com/tmux/tmux/issues/237

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="$color_purple"

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
# TODO: highlighted for nested local session as well
wg_is_keys_off='#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo "ðŸ–§: ON")#[default]'

# THEME
# set -g status-left '#[bg=magenta] #(whoami)@#H '
set -g status-left '#[bg=red]#H'
set -g status-right "$wg_is_keys_off #[bg=red fg=white] [#S] #[bg=white fg=black] %b %d %Y | %H:%M "
# set -g status-right '$wg_is_key_off'
set -g status-bg black
set -g status-fg white

set-window-option -g window-status-current-style bg='white',fg='black',bold
set-window-option -g window-status-format ' #I: #{=15:window_name}#F '
set-window-option -g window-status-current-format ' #I: #W#F '

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file $HOME/.config/tmux/tmux.remote.conf'

# Also, change some visual styles when window keys are off
bind -T root F12  \
  set prefix2 None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]#[default] #I: #W#F #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]#[default]" \;\
  set status-bg brightblack \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix2 \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-format \;\
  set -u status-bg  \;\
  set -u window-status-current-style \;\
  refresh-client -S
